{% extends 'dashboard/dashboard.html.twig' %}

{% block title %}VDP{{ version }} - new page{% endblock %}

{% block body %}

    <div class="container" style="margin-top: 50px;">
        <div class="page-header">
            <h1>{{ vasterUser.firstname }}, Manage Your Pages <small>customizing is power!</small></h1>
        </div>

        <div class="row">

            <div class="col-md-6">


                <div class="panel panel-default">
                    <div class="panel-heading" style="height: 37px; padding-right: 15%;">
                        <h3 class="panel-title"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> Your Pages</h3>

                    </div>


                    <div class="btn-group" style=" float: right; height: 38px; top: -39px; right: -1px;">
                        <button id="loadNew" type="button" class="btn btn-success" style="border-radius: 0 5px 0 0; width: 100px; height: 38px; padding-right: 0; padding-left: 4px; float: left;"><span class="glyphicon glyphicon-plus"></span> New Page</button>

                    </div>

                    <div class="panel-body">
                        This List is sortable so you can modify it interactively.
                        <br><br>
                        <table class="table table-striped table-hover" id="pagesTable">
                            <thead>
                            <tr>
                                <th>Page Name</th>
                                <th>Rank</th>
                            </tr>
                            </thead>
                            <tbody id="ajaxTbody">
                            {% for page in pages %}
                                <tr class="page">
                                    <td><span class="id">{{ page.id }}</span>{{ page.name }}</td>
                                    <td class="rank">{{ page.rank }}</td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>


            <div class="col-md-6">
                <div class="panel panel-default" id="newPanel" style="display: none;">
                    <div class="panel-heading">
                        <h3 class="panel-title"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> Add a New Page</h3>
                    </div>

                    <div class="panel-body" id="addPage">




                    </div>
                </div>

                <div class="panel panel-default" id="editPanel" style="display: none;">
                    <div class="panel-heading">
                        <h3 class="panel-title"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> Edit Page</h3>
                    </div>

                    <div class="panel-body" id="editPage">

                    </div>
                </div>

            </div>


        </div>


    </div>

    <div class="modal fade" id="confirm" tabindex="-1" role="dialog" aria-labelledby="confirm">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header ">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                    <h4 class="modal-title" id="myModalLabel">Remove Page</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove this page?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Dismiss</button>
                    <button type="button" class="btn btn-danger" id="doRemove">Remove</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="confirmModuleRemoval" tabindex="-1" role="dialog" aria-labelledby="confirmModuleRemoval">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header ">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                    <h4 class="modal-title" id="myModalLabel">Remove Module</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to remove this module from this page?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Dismiss</button>
                    <button type="button" class="btn btn-danger" id="doRemoveModule">Remove</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="addModuleModal" tabindex="-1" role="dialog" aria-labelledby="addModuleModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header ">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                    <h4 class="modal-title" id="myModalLabel">Add New Module</h4>
                </div>
                <div class="modal-body">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Dismiss</button>
                    <button type="submit" class="btn btn-success" id="doAddModule" formnovalidate>Add</button>
                </div>
            </div>
        </div>
    </div>




{% endblock %}

{% block javascripts %}
    {{ parent() }}
<script>

    var beingEddited = "";
    var pendingModuleRemove = "";

function removeButton(id){
    return  "<div class='btn-group btn-group-lg' role='group' style='float: right'>" +
            "<button id='remove' class='btn btn-danger' data-removeLink=" +
            id + '/remove' +
            "><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>" +
            "</div>";
}


//setInterval(loadTable, 2000);

function loadTable() {

    $.ajax({
        url: 'api/pages',
        dataType:"JSON",
        success: function (data) {
            $("#ajaxTbody").html("");
            $.each( data.pages, function( key, value ) {
                //alert( value.name + value.rank );
                $("#ajaxTbody").append(
                    "<tr class='page'>" +
                        "<td><span class='id'>" + value.id + "</span>" + value.name + "</td>" +
                        "<td class='rank'>" + value.rank + "</td>" +
                    "</tr>"
                )
            });
        }
    });
}

function loadEdit(id) {
    $("#newPanel").hide();
    $.ajax({
        url: id + '/edit',
        success: function (data) {
            $("#editPage").html(data);
            if( $('#ajaxTbody tr.page').length > 1 )
                $("#editPageContent").append(removeButton(id));
            $("#editPanel").trigger( "Content_Loaded" ).show();
        }
    });


}

function loadNew() {
    $("#editPanel").hide();
    $.ajax({
        url: 'new',
        success: function (data) {
            $("#addPage").html(data);
            //alert(data);
        }
    });
    $("#newPanel").show();
}

$( "#loadNew" ).click(function() {
    loadNew();
});



$('#pagesTable').on('click', '.page', function (e) {
    e.preventDefault();

    beingEddited = $(this).find(".id").text();
    loadEdit( beingEddited );
});

$('#editPanel').on('submit', '#update', function (e) {
    e.preventDefault();

    $.ajax({
        type: 'post',
        url: beingEddited + '/edit',
        data: $('#update').serialize(),
        success: function () {
            loadTable();
            loadEdit( beingEddited );
        }
    });

});

$('#editPanel').on('click', '#remove', function (e) {
    e.preventDefault();
    $('#confirm').modal();
});

$( "#doRemove" ).click(function() {
    $.ajax({
     url: $( "#remove" ).attr("data-removeLink"),
     success: function (data) {
            loadTable();
            loadNew();
            $('#confirm').modal('hide');
        }
     });
});




$('#newPanel').on('submit', '#add', function (e) {
    e.preventDefault();

    $.ajax({
        type: 'post',
        url: 'new',
        data: $('#add').serialize(),
        success: function () {
            console.log("here");
            loadTable();
            loadNew();
        }
    });

});



function loadEditCallback(id, rank) {
    //$("#newPanel").hide();
    $.ajax({
        url: id + '/edit',
        success: function (data) {

            //$("#editPanel").show();
            $("#update #app_bundle_new_page_rank").val(rank);
            $.ajax({
                type: 'post',
                url: id + '/edit',
                data: $('#update').serialize(),
                success: function () {
                    loadTable();
                    //loadNew();
                }
            });
        }
    });


}

$( document ).ready(function() {
    loadNew();


    $( "#ajaxTbody" ).sortable({
        placeholder: "ui-state-highlight",
        start: function() {
            $( "#pagesTable" ).removeClass("table-striped");
        },
        stop: function() {
            $( "#pagesTable" ).addClass("table-striped");

        },
        update: function(event, ui) {
            beingEddited = $(ui.item).find(".id").text();


            var intPrev = parseInt($(ui.item).prev().find(".rank").text());
            var intNext = parseInt($(ui.item).next().find(".rank").text());

            var rank = 0;

            if(isNaN(intPrev) && isNaN(intNext)){
                console.log("FATAL ERROR");
            }else if( isNaN(intPrev) ){
                rank = intNext - 100;
            }else if( isNaN(intNext) ){
                rank = intPrev + 100;
            }else{
                rank = (intPrev + intNext)/2;
            }

            loadEditCallback( beingEddited, rank  );
        }
    }).disableSelection();


});



function loadNewModule() {
    $.ajax({
        url: beingEddited + '/new-module',
        success: function (data) {
            $("#addModuleModal").find(".modal-body").html(data);
        }
    });
}

$('#addModuleModal').on('submit', '#addModule', function (e) {
    e.preventDefault();
    $("#addModuleModal").modal('hide');
    $.ajax({
        type: 'post',
        url: beingEddited + '/new-module',
        data: $('#addModule').serialize(),
        success: function () {

            loadEdit(beingEddited);

        }
    });

});

$( "#doAddModule" ).click(function() {
    $("#addModule").trigger( "submit" );
});

$( "#editPanel" ).on( "Content_Loaded", function() {
    $( "#loadNewModule" ).click(function() {
        loadNewModule();
        $("#addModuleModal").modal();

    });

    $( ".removeModule" ).click(function() {
        $('#confirmModuleRemoval').modal();
        pendingModuleRemove = $(this).attr("data-removeLink");
    });
});



$( "#doRemoveModule" ).click(function() {
    $.ajax({
        url: pendingModuleRemove,
        success: function (data) {
            loadTable();
            loadEdit(beingEddited);
            $('#confirmModuleRemoval').modal('hide');
        }
    });
});


</script>


    <style>
        .ui-state-highlight {
            background-color: #efefef;
        }
        .page{
            cursor: pointer;
        }
        .id{
            display: none;
        }
    </style>
{% endblock %}

