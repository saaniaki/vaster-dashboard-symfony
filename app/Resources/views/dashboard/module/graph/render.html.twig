{# dump(result) #}


<div class="col-sm-{{ conf.layout.size }}">

    <div class="panel panel-default" id="module-{{ result.module.id }}">
        <div class="panel-heading" style="height: 38px;padding-right: 15%;">
            <h3 class="panel-title"><span class="glyphicon glyphicon-stats" aria-hidden="true"></span> <span class="module-title">{{ result.title }}</span></h3>
        </div>

        <div class="btn-group" style=" float: right; height: 38px; top: -39px; right: -1px;">
            <button id="LastSeenSwitch" type="button" class="btn btn-primary" data-loading-text="Loading..." autocomplete="off" style="float: left; height: 38px; top: 1px; right: -1px; border-radius: 0px;">Switch</button>
            <span data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="glyphicon glyphicon-option-vertical btn btn-primary" aria-hidden="true" style="border-radius: 0px 5px 0px 0px; width: 40px; height: 38px; padding-right: 0px; padding-left: 4px; padding-bottom: 0px; padding-top: 8px; float: left;"></span>
            <ul class="dropdown-menu dropdown-menu-right" style=" top: 104%; right: 3px;">
                <li><a href="#">Change</a></li>
                <li><a href="#">Move</a></li>
                <li><a href="#" data-toggle="modal" data-target="#option-module-{{ result.module.id }}">Options</a></li></li>
                <li role="separator" class="divider"></li>
                <li><a href="#" data-toggle="modal" data-target="#about-module-{{ result.module.id }}">About</a></li>
            </ul>
        </div>

        <div class="panel-body" style="height: 350px; width: 100%; position: relative;">
            <div id="loading-{{ result.module.id }}" class="loading">
                <div class="sk-folding-cube">
                    <div class="sk-cube1 sk-cube"></div>
                    <div class="sk-cube2 sk-cube"></div>
                    <div class="sk-cube4 sk-cube"></div>
                    <div class="sk-cube3 sk-cube"></div>
                </div>

            </div>

            <div id="module-{{ result.module.id }}-container" style="height: 320px;"></div>

        </div>
        <div class="panel-footer">{{ result.footer }}</div>
    </div>


</div>







<!-- About Modal -->
<div class="modal fade" id="about-module-{{ result.module.id }}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header ">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                <h4 class="modal-title" id="myModalLabel">About- {{ result.module.moduleInfo.name }}</h4>
            </div>
            <div class="modal-body">
                {{ result.module.moduleInfo.description }}
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!-- Option Modal -->
<div class="modal fade" id="option-module-{{ result.module.id }}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document" style="width: 70%;">
        <div class="modal-content">
            <div class="modal-header ">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">X</span></button>
                <h4 class="modal-title" id="myModalLabel">Options - {{ result.title }}</h4>
            </div>
            <div class="modal-body">


                <p class="bg-primary" style="padding: 15px;">{{ result.module.moduleInfo.guide }}</p>


                <div class="js_options-init"></div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success option-module-save" data-module-id="{{ result.module.id }}">Save</button>
            </div>
        </div>
    </div>
</div>





























<style>

    .highcharts-title {
        display: none;
    }
    .highcharts-container{
        top: -23px;
    }
</style>



<script>
    {#
    var all_data = [];
    {% for dataSet in result.all_data %}

        var data_data = [];
        {% for value in dataSet.data %}
            data_data.push({
                {% if value.x is defined %} x: '{{ value.x }}' ,{% endif %}
                {% if value.y is defined %} y: {{ value.y }} ,{% endif %}
                name: '{{ value.name }}'
            });
        {% endfor %}

        all_data.push({
            name: '{{ dataSet.name }}',
            //type: '{ dataSet.type }}',
            data: data_data,

            {% if dataSet.yAxis is defined and dataSet.yAxis is not null %}
            yAxis: {{ dataSet.yAxis }},
            {% endif %}

            tooltip: {
                {% if dataSet.tooltip is defined and dataSet.tooltip == 'percentage' %}
                pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}: {point.y:.2f} %<br/>'
                {% endif %}
            }

            {% if dataSet.color is defined and dataSet.color is not null %}
            ,
            color: '{{ dataSet.color }}'
            {% endif %}

            {% if result.xAxisType is defined and result.xAxisType == 'datetime' %}
            ,
            pointStart: Date.UTC({{ result.start.year }}, {{ result.start.month }}, {{ result.start.day }}),  //set to module!!
            pointInterval: {{ result.xInterval }}
            {% endif %}
        });

    {% endfor %}
#}


    var all_data = [];
    {% for dataSet in result.all_data %}



    var data_data = [];
    {% for value in dataSet.data %}
    data_data.push({
        {% if value.x is defined %} x: '{{ value.x }}' ,{% endif %}
        {% if value.y is defined %} y: {{ value.y }} ,{% endif %}
        name: '{{ value.name }}'
    });
    {% endfor %}




    all_data.push({
        name: '{{ dataSet.name }}',
        type: '{{ dataSet.type }}',
        data: data_data,

        {% if dataSet.yAxis is defined and dataSet.yAxis is not null %}
        yAxis: {{ dataSet.yAxis }},
        {% endif %}

        tooltip: {
            {% if dataSet.tooltip is defined and dataSet.tooltip == 'percentage' %}
            pointFormat: '<span style="color:{point.color}">\u25CF</span> {series.name}: {point.y:.2f} %<br/>'
            {% endif %}
        }

        {% if dataSet.color is defined and dataSet.color is not null %}
        ,
        color: '{{ dataSet.color }}'
        {% endif %}

        {% if result.xAxisType is defined and result.xAxisType == 'datetime' %}
        ,
        pointStart: Date.UTC({{ result.start.year }}, {{ result.start.month }}, {{ result.start.day }}, {{ result.start.hour }}, {{ result.start.minute }}),  //set to module!!
        pointInterval: {{ result.xInterval }}
        {% endif %}
    });

    {% endfor %}


    Highcharts.getOptions().plotOptions.pie.colors = (function () {
        var colors = [];
        {% for color in result.color %}
        colors.push('{{ color }}');
        {% endfor %}
        return colors;
    }());



    var module{{ result.module.id }} = Highcharts.chart('module-{{ result.module.id }}-container', {
        chart: {
            zoomType: 'x',
            panning: true,
            panKey: 'shift'
            /*,events: {
                load: function () {
                    var series = this.series[0];
                    setInterval(function () {
                        series.setData(data1);
                    }, 1000);
                }
            }*/
        },
        title: {
            text: '{{ result.title }}'
        },
        tooltip: {
            {% if result.tooltip_shared is defined and result.tooltip_shared is not null %}
                shared: {{ result.tooltip_shared }}
            {% endif %}
        },
        xAxis: {
            title: {
                text: '{{ result.xTitle }}'
            }

            {% if result.xAxisType is defined and result.xAxisType == 'datetime' %}
            ,
            type: '{{ result.xAxisType }}',
            dateTimeLabelFormats: {
                hour: '%e %b, %Y %H:%M',
                day: '%e %b, %Y',
                week: '%e %b, %Y',
                month: '%e %b, %Y',
                year: '%e %b, %Y'
            }
            {% endif %}

        },
        yAxis: [
            {
                title: {
                    text: '{{ result.yTitle }}'
                }

                {% if result.yMax is defined and result.yMax is not null %}
                ,max: {{ result.yMax }}
                {% endif %}

                {% if result.yAllowDecimals is defined and result.yAllowDecimals is not null %}
                , allowDecimals: false
                {% endif %}
            }
            {% if result.y1Title is defined and result.y1Title is not null %} //should be more general
            ,
            {
                title: {
                    text: '{{ result.y1Title }}'
                },
                labels: {
                    format: '{{ result.y1Format }}'
                },
                opposite: true
                {% if result.y1Max is defined and result.y1Max is not null %}
                ,max: {{ result.y1Max }}
                {% endif %}

                {% if result.y1AllowDecimals is defined and result.y1AllowDecimals is not null %}
                , allowDecimals: false
                {% endif %}
            }
            {% endif %}
        ],
        plotOptions: {
            line: {
                allowPointSelect: false,
                marker: {
                    enabled: false
                }
            },
            pie: {
                shadow: true,
                size: {{ result.size }},
                slicedOffset: {{ result.size * 0.07 }},
                allowPointSelect: true,
                cursor: 'pointer',
                dataLabels: {
                    enabled: true,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                    }
                }
            },
            column: {
                stacking: 'normal'
            },
            series: {
                turboThreshold: 0 // wtf
            }
        },

        series: all_data
    });


</script>